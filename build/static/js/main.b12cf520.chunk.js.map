{"version":3,"sources":["common/Container.jsx","api/rest.js","Context.jsx","constants.js","common/Title.jsx","common/Flex.jsx","components/Branding/index.jsx","common/TitleAndDescription.jsx","components/Power/index.jsx","components/Hours/index.jsx","components/Status/index.jsx","components/Breakdown/index.jsx","components/PreviousMonth/index.jsx","components/Theme/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Container","props","inline","display","justifyContent","alignItems","height","window","innerHeight","width","innerWidth","backgroundColor","className","classNames","style","children","turnRoomOn","id","setLoading","axios","get","then","response","catch","error","console","log","turnRoomOff","socket","io","process","Context","React","createContext","reducer","state","action","newState","type","rooms","payload","house","analytics","isDay","Error","initialState","totalPowerOn","isLoading","colors","day","color","night","Provider","useReducer","dispatch","useLayoutEffect","hour","Date","getHours","res","data","on","value","Title","useContext","fontSize","fontFamily","determineBoxShadow","Flex","flexDirection","direction","padding","margin","borderRadius","flexWrap","boxShadow","wrap","Fragment","minHeight","title","onMouseDown","onClick","onMouseOver","onMouseLeave","Branding","size","icon","faLightbulb","marginTop","TitleAndDescription","name","marginLeft","noMargin","titleColor","description","secondaryColor","Power","context","Lumen","power","parseFloat","toFixed","Hours","length","month","getMonth","filter","hours","totalTimeOn","animateActive","setIsActivelyPressed","active","setInterval","Status","useState","isActivelyPressed","setIsLoading","map","room","index","onFor","onForString","bubble","marginBottom","border","transition","lastOn","toLocaleTimeString","minute","getTime","handleChange","Breakdown","houseAnalytics","roomAnalytics","label","enableRadialLabels","isMobile","sliceLabel","d","parseInt","top","right","bottom","left","innerRadius","padAngle","cornerRadius","scheme","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","sortByValue","theme","textColor","tickColor","fontWeight","PreviousMonth","previousMonth","housePreviousMonthAnalytics","houseMonthAnalytics","change","faCaretRight","faCaretUp","faCaretDown","ThemeToggle","position","App","setHeight","addEventListener","Theme","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qXAgBeA,G,OAZG,SAACC,GACf,IAAMC,EAAS,CACXC,QAAS,OACTC,eAAgBH,EAAMG,eACtBC,WAAYJ,EAAMI,WAClBC,OAAQC,OAAOC,YACfC,MAAOF,OAAOG,WACdC,gBAAiBV,EAAMU,iBAE3B,OAAO,yBAAKC,UAAWC,IAAW,yBAA0BC,MAAOZ,GAASD,EAAMc,Y,2DC8CzEC,EAAa,SAACC,EAAIC,GAAL,OAAoBC,IAAMC,IAAN,uBAA0BH,IACnEI,MAAK,SAAAC,GAEF,OAAOA,KAEVC,OAAM,SAAUC,GAEbC,QAAQC,IAAIF,OAGPG,EAAc,SAACV,EAAIC,GAAL,OAAoBC,IAAMC,IAAN,wBAA2BH,IACrEI,MAAK,SAAAC,GAEF,OAAOA,KAEVC,OAAM,SAAUC,GAEbC,QAAQC,IAAIF,OCtEdI,EAASC,IAAGC,+BAELC,EAAUC,IAAMC,gBAEvBC,EAAU,SAACC,EAAOC,GACpB,IAAMC,EAAQ,eAAQF,GACtB,OAAQC,EAAOE,MACX,IAAK,YACDD,EAASE,MAAQH,EAAOI,QAAQD,MAChCF,EAASI,MAAQL,EAAOI,QAAQC,MAChC,MACJ,IAAK,gBACDJ,EAASK,UAAYN,EAAOI,QAC5B,MACJ,IAAK,aACDH,EAASM,OAAQ,EACjB,MACJ,IAAK,eACDN,EAASM,OAAQ,EACjB,MACJ,QACI,MAAM,IAAIC,MAElB,OAAOP,GAGLQ,EAAe,CACjBN,MAAO,GACPE,MAAO,CACHC,UAAW,GACXI,aAAc,GAElBC,WAAW,EACXJ,OAAO,EACPK,OAAQ,CACJC,IAAK,CACDC,MAAO,QACPvC,gBAAiB,SAErBwC,MAAO,CACHD,MAAO,QACPvC,gBCxC0B,aD6CzByC,EAAW,SAACnD,GAAW,IAAD,EACL+B,IAAMqB,WAAWnB,EAASW,GADrB,mBACxBV,EADwB,KACjBmB,EADiB,KAgB/B,OAdAtB,IAAMuB,iBAAgB,WAClB,IAAMC,GAAO,IAAIC,MAAOC,WACpBF,GAAQ,GAAKA,GAAQ,IACrBF,EAAS,CAAEhB,KAAM,eDhBCnB,IAAMC,IAAI,cACnCC,MAAK,SAAAC,GACF,OAAOA,KAEVC,OAAM,SAAUC,GAEbC,QAAQC,IAAIF,MCaNH,MAAK,SAACsC,GACRL,EAAS,CAAEhB,KAAM,YAAaE,QAASmB,EAAIC,UAE/ChC,EAAOiC,GAAG,iBAAiB,SAACD,GACxBN,EAAS,CAAEhB,KAAM,YAAaE,QAASoB,SAE5C,IAGC,kBAAC7B,EAAQqB,SAAT,CAAkBU,MAAK,eAAO3B,EAAP,CAAcmB,cAChCrD,EAAMc,WEvDJgD,EAXD,SAAC9D,GAAW,IACd0C,EAAUX,IAAMgC,WAAWjC,GAA3BY,MACFzC,EAAM,aACRgD,MAAOjD,EAAMiD,MAAQjD,EAAMiD,MAAQP,EDGR,YCHsC,QACjEsB,SAAU,GACVC,WAAW,2BACRjE,EAAMa,OAEb,OAAO,yBAAKA,MAAOZ,GAASD,EAAMc,WC6BhCoD,EAAqB,SAACxB,GACxB,OAAIA,EF5BmB,qFACE,sFEmCdyB,EA7CF,SAACnE,GAAW,IAAD,EACZ0C,EAAUX,IAAMgC,WAAWjC,GAA3BY,MAEFzC,EAAM,gBACRC,QAAS,OACTkE,cAAepE,EAAMqE,UACrBlE,eAAgBH,EAAMG,eACtBC,WAAYJ,EAAMI,WAClBC,OAAQL,EAAMK,OACdG,MAAOR,EAAMQ,MACbE,gBAAiBV,EAAMU,gBACvB4D,QAAStE,EAAMsE,QACfC,OAAQvE,EAAMuE,OACdC,aAAcxE,EAAMwE,aACpBC,SAAUzE,EAAMyE,SAChBC,UAAW1E,EAAM0E,WAAaR,EAAmBxB,IAZzC,wBAaC1C,EAAMsE,SAbP,yBAcEtE,EAAM2E,MAAQ,QAdhB,GAeL3E,EAAMa,OAEb,OACI,kBAAC,IAAM+D,SAAP,KACI,kBAAC,EAAD,CAAO/D,MAAO,CAAEgE,UAAW7E,EAAM8E,OAAS,KAAO9E,EAAM8E,OACvD,yBACIC,YAAa/E,EAAM+E,YACnBpE,UAAWX,EAAMW,UACjBE,MAAOZ,EACP+E,QAAShF,EAAMgF,QACfC,YAAajF,EAAMiF,YACnBC,aAAclF,EAAMkF,cACnBlF,EAAMc,Y,gBCPRqE,EApBE,WAAO,IACZzC,EAAUX,IAAMgC,WAAWjC,GAA3BY,MACR,OACI,kBAAC,EAAD,CACI8B,aAAa,gBACb9D,gBAAiBgC,EHNS,UADjB,OGQTrC,OAAO,QACPG,MAAM,OACNL,eAAe,SACfC,WAAW,SACXiE,UAAU,UAEV,kBAAC,IAAD,CAAiBpB,MAAOP,EHdf,OACiB,UGctB0C,KAAK,KAAKC,KAAMC,MACpB,yBAAKzE,MAAO,CAAE0E,UAAW,MACzB,kBAAC,EAAD,CAAOtC,MAAOP,EHjBL,OACiB,WGgB1B,mBCcG8C,EAhCa,SAACxF,GAAW,IAC5B0C,EAAUX,IAAMgC,WAAWjC,GAA3BY,MACFzC,EAAS,CACXwF,KAAM,CACFzB,SAAUhE,EAAMgE,SAChB0B,WAAY1F,EAAM2F,SAAW,EAAI,GACjC1C,MAAOjD,EAAM4F,WAAa5F,EAAM4F,WAAalD,EJFhC,YIEoD,QACjEuB,WAAY,0BAEhBoB,KAAM,CACFnF,QAAS,OACTE,WAAY,SACZsF,WAAY,GAEhBG,YAAa,CACT7B,SAAU,GACV0B,WAAY1F,EAAM2F,SAAW,EAAI,GACjC1C,MAAOjD,EAAM8F,eAAiB9F,EAAM8F,eAAiBpD,EJZ9B,YIY4D,QACnFuB,WAAY,2BAGpB,OACI,kBAAC,EAAD,CAAMI,UAAU,UACZ,kBAAC,EAAD,CAAMA,UAAU,OACZ,yBAAKxD,MAAOZ,EAAOwF,MAAOzF,EAAM8E,OAChC,yBAAKjE,MAAOZ,EAAOoF,MAAOrF,EAAMqF,OAEpC,yBAAKxE,MAAOZ,EAAO4F,aAAc7F,EAAM6F,eCrBpCE,G,OAND,WACV,IAAMC,EAAUjE,IAAMgC,WAAWkC,GAC3BC,EAAQC,WAAWH,EAAQxD,MAAMK,cAAcuD,QAAQ,IAAM,EACnE,OAAQ,kBAAC,EAAD,CAAqBpC,SAAU,GAAIc,MAAK,UAAKoB,EAAL,KAAeL,YAAY,kBCQhEQ,EAVD,WACV,IAAML,EAAUjE,IAAMgC,WAAWkC,GACjC,GAAuC,IAAnCD,EAAQxD,MAAMC,UAAU6D,OACxB,OAAO,KAEX,IAAMC,GAAQ,IAAI/C,MAAOgD,WALT,EAMAC,iBAAOT,EAAQxD,MAAMC,UAAW,CAAEzB,GAAIuF,KAAY,EAA3DG,EANS,oBAOhB,OAAQ,kBAAC,EAAD,CAAqB1C,SAAU,GAAIc,MAAK,WAAM4B,EAAMC,YAAc,MAASP,QAAQ,GAA3C,KAAkDP,YAAY,kBC+D5Ge,G,OAAgB,SAAC,GAAgC,IAA/B5F,EAA8B,EAA9BA,GAAI6F,EAA0B,EAA1BA,qBACxBA,EAAqB,CAAC7F,KAAI8F,QAAQ,IAClCC,aAAY,WACRF,EAAqB,CAAC7F,IAAK,EAAG8F,QAAQ,MACvC,OAUQE,EAjFA,WAAO,IAAD,EACiCjF,IAAMkF,SAAS,CAACjG,IAAK,EAAG8F,QAAQ,IADjE,mBACVI,EADU,KACSL,EADT,OAEsB9E,IAAMgC,WAAWjC,GAAhDY,EAFS,EAETA,MAAOJ,EAFE,EAEFA,MAFE,EAEK6E,aACtB,OAAO7E,EAAM8E,KAAI,SAACC,EAAMC,GACpB,IAiBIC,EACAC,EAlBEvH,EAAS,CACXwH,OAAQ,CACJpH,OAAQ,GACRG,MAAO,GACPgE,aAAc,GACdkD,aAAc,EACdC,OAAQ,iBACRC,WAAY,kCACZ,aAAc,uGAElBL,MAAO,CACHvD,SAAU,GACVtD,gBAAiB,UACjB4D,QAAS,oBACTE,aAAc,KAKhBqD,EAAS,IAAIrE,KAAK6D,EAAKQ,QAAQC,mBAAmB,QAAS,CAC7DvE,KAAM,UAAWwE,OAAQ,YAKzBV,EAAKzD,IAEL2D,KADY,IAAI/D,MAAOwE,UACPX,EAAKQ,QAAU,KAAOzB,QAAQ,GAC9CoB,EAAW,UAAMD,EAAQ,GAAR,WAAiBA,EAAQ,IAAInB,QAAQ,GAArC,oBAAqDmB,EAArD,cAGjBC,EAAW,mBAAeK,GAE9B,OACI,kBAAC,EAAD,CACI7C,QAAS,YAbI,SAAC,GAAgB,IAAdpB,EAAa,EAAbA,GAAI5C,EAAS,EAATA,GACjB4C,EAAKlC,EAAYV,GAAMD,EAAWC,GAajCiH,CAAa,CAAErE,GAAIyD,EAAKzD,GAAI5C,GAAIqG,EAAKrG,KACrC4F,EAAc,CAAC5F,GAAIqG,EAAKrG,GAAI6F,0BAEhCvC,QAAQ,OACRD,UAAU,SAEVlE,eAAe,SACfC,WAAW,SACXC,OAAO,mBACPG,MAAM,mBACN+D,OAAO,YACPC,aAAa,OACb7D,UAAWC,IAAW,sBAAuB,CACzC,aAAc8B,EACd,gBAAiBA,EACjB,oBAAqBA,GAASwE,EAAkBlG,KAAOqG,EAAKrG,IAAMkG,EAAkBJ,UAGxF,yBAAKnG,UAAWC,IAAW,CAAE,mBAAoByG,EAAKzD,KAAO/C,MAAOZ,EAAOwH,SAC3E,kBAAC,EAAD,CAAqB9B,UAAQ,EAAC3B,SAAU,GAAIc,MAAOuC,EAAK5B,OACxD,yBAAK5E,MAAOZ,EAAOsH,OAAQC,Q,iBCT5BU,EArDG,WACd,IAAMlC,EAAUjE,IAAMgC,WAAWkC,GACjC,GAA6B,IAAzBD,EAAQ1D,MAAMgE,OACd,OAAO,KAHS,MAKKG,iBAAOT,EAAQxD,MAAMC,UAAW,CAAEzB,IAAI,IAAIwC,MAAOgD,aAAnE2B,EALa,oBAMdxE,EAAOqC,EAAQ1D,MAAM8E,KAAI,SAAAC,GAAS,IAAD,EACXZ,iBAAOY,EAAK5E,UAAW,CAAEzB,IAAI,IAAIwC,MAAOgD,aAAzD4B,EAD4B,oBAOnC,MALiB,CACbC,MAAOhB,EAAK5B,KACZzE,GAAIqG,EAAK5B,KACT5B,OAASuE,EAAczB,YAAcwB,EAAexB,YAAe,KAAKP,QAAQ,OAWxF,OACI,kBAAC,IAAD,CACIkC,oBAAqBC,WACrBC,WAAY,SAACC,GAAD,gBAAUC,SAASD,EAAE5E,OAAOuC,QAAQ,GAApC,MACZzC,KAAMA,EACNY,QAASgE,YAAY,CAAEI,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAC7DC,YAAa,GACbC,SAAU,GACVC,aAAc,EACdlG,OAAQ,CAAEmG,OAAQ,QAClBC,YAAa,EACbC,YAAa,CAAEC,KAAM,QAASC,UAAW,CAAC,CAAC,SAAU,MACrDC,sBAAuB,GACvBC,wBAAyB,EACzBC,sBAAuBzD,EAAQtD,MAAQ,QAAU,QACjDgH,uBAAwB,EACxBC,+BAAgC,GAChCC,iCAAkC,GAClCC,4BAA6B,EAC7BC,sBAAuB,CAAET,KAAM,SAC/BU,sBAAuB,GACvBC,sBAAuBhE,EAAQtD,MAAQ,QAAU,QACjDuH,SAAS,EACTC,gBAAiB,GACjBC,cAAe,GACfC,aAAW,EACXC,MAjCM,CACVC,UAAW,OACXtG,SAAU,OACVuG,UAAW,OACXC,WAAY,QCELC,EArBO,WAClB,IAAMzE,EAAUjE,IAAMgC,WAAWkC,GACjC,GAAuC,IAAnCD,EAAQxD,MAAMC,UAAU6D,OACxB,OAAO,KAEX,IAAMC,GAAQ,IAAI/C,MAAOgD,WACnBkE,EAA0B,IAAVnE,EAAc,GAAKA,EAAQ,EAC3CoE,EAA8B3E,EAAQxD,MAAMC,UAAUiI,GACtDE,EAAsB5E,EAAQxD,MAAMC,UAAU8D,GAC9CsE,EAAmG,KAAxFF,EAA4BhE,YAAciE,EAAoBjE,aAAaP,QAAQ,GAAY,IAChH,OACI,kBAAC,EAAD,CACIpC,SAAU,GACVc,MAAK,WAAiB,MAAZ+F,EAAkB,MAAlB,UAA6BA,EAA7B,MACVjF,WAAYiF,EAAS,EAAI,UAAY,UACrCxF,KAAM,kBAAC,IAAD,CAAiBD,KAAK,KAAKvE,MAAO,CAAEoC,MAAO4H,EAAS,EAAI,UAAY,WAAaxF,MAAkB,MAAZwF,EAAkBC,IAAeD,EAAS,EAAIE,IAAYC,MACvJnF,aAAyB,MAAZgF,EAAkB,wBAA0B,6BCW/D3G,G,OAAqB,SAACxB,GACxB,OAAIA,EACM,qFAEJ,uFAGKuI,EAlCK,WAAO,IAAD,EACMlJ,IAAMgC,WAAWjC,GAArCuB,EADc,EACdA,SAAUX,EADI,EACJA,MAElB,OACI,kBAAC,IAAD,CACI0C,KAAK,KACLnC,MAAOP,EVPE,OACiB,UUO1B2C,KAAMC,IACNN,QAAS,WACG3B,EAARX,EAAiB,CAAEL,KAAM,gBAA6B,CAAEA,KAAM,gBAElExB,MAAO,CACHyD,QAAS,OACT5D,gBAAiBgC,EVbK,UADjB,OUeL8B,aAAc,IACd0G,SAAU,WACVrC,OAAQ,OACRD,MAAO,OACPvI,OAAQ,OACRG,MAAO,OACPkE,UAAWR,EAAmBxB,IAElC/B,UAAU,2CC8DPwK,MA1Ef,WAAgB,IAAD,EACepJ,IAAMkF,SAAS3G,OAAOC,aADrC,mBACE6K,GADF,aAEWrJ,IAAMkF,UAAS,GAF1B,6BAwBb3G,OAAO+K,iBAAiB,UAAU,WAChCD,EAAU9K,OAAOC,YAAc,QAzBpB,IA4BLmC,EAAUX,IAAMgC,WAAWjC,GAA3BY,MAER,OACE,kBAAC,EAAD,CAAWhC,gBAAiBgC,EX5Cc,UADE,YW8CxC6F,YACA,kBAAC,EAAD,CAAM/H,MAAM,OACV,kBAAC,EAAD,CAAM6D,UAAU,SAASjE,WAAW,aAAaoE,aAAa,gBAAgBhE,MAAM,OAAO+D,OAAO,sBAAsB7D,gBAAiBgC,EX7C9H,OACiB,UW4CqJgC,WAAS,GACxL,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAML,UAAU,SAAS7D,MAAM,OAAO8D,QAAQ,eAMpD,kBAAC,EAAD,CAAM9D,MAAO+H,WAAW,OAAS,MAAOhE,OAAQgE,WAAW,sBAAwB,sBACjF,kBAAC,EAAD,CAAMlI,OAAO,OAAOG,MAAO+H,WAAW,OAAS,MAAOhE,OAAQgE,WAAW,kBAAoB,mBAAoBlE,UAAU,UACzH,kBAAC,EAAD,CAAMG,aAAa,gBAAgBM,MAAM,QAAQR,QAAQ,OAAOjE,OAAO,QAAQG,MAAM,OAAOE,gBAAiBgC,EXvDlG,OACiB,UWsDyHgC,WAAS,GAC5J,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAMC,MAAI,EAACH,aAAa,gBAAgBrE,eAAe,aAAa2E,MAAOyD,WAAW,YAAc,WAAYlE,UAAU,MAAMC,QAAQ,OAAOjE,OAAO,qBAAqBG,MAAM,aAAa+D,OAAM,cAASgE,WAAW,EAAI,GAAxB,YAAsC7H,gBAAiBgC,EX1DhP,OACiB,UWyDuQgC,WAAS,GACzS6D,WAAW,kBAAC,EAAD,MAAgB,kBAAC,EAAD,SAG9BA,YACA,kBAAC,EAAD,CAAMlI,OAAO,OAAOG,MAAM,MAAM6D,UAAU,UACxC,kBAAC,EAAD,CAAMA,UAAU,OACd,kBAAC,EAAD,CAAMG,aAAa,gBAAgBF,QAAQ,OAAOjE,OAAO,QAAQG,MAAM,MAAM+D,OAAO,oBAAoB7D,gBAAiBgC,EXjElH,OACiB,UWgEyIgC,WAAS,GACxK,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAMF,aAAa,gBAAgBF,QAAQ,OAAOjE,OAAO,QAAQG,MAAM,MAAM+D,OAAO,mBAAmB7D,gBAAiBgC,EXpEjH,OACiB,UWmEwIgC,WAAS,GACvK,kBAAC,EAAD,QAGJ,kBAAC,EAAD,CAAMF,aAAa,gBAAgBM,MAAM,QAAQR,QAAQ,OAAOjE,OAAO,qBAAqBG,MAAM,OAAO+D,OAAO,kBAAkB7D,gBAAiBgC,EXxE1I,OACiB,UWuEiKgC,WAAS,GAClM,kBAAC,EAAD,SAKR,kBAAC,EAAD,KACE,kBAAC4G,EAAD,SCzEYC,QACW,cAA7BjL,OAAOkL,SAASC,UAEe,UAA7BnL,OAAOkL,SAASC,UAEhBnL,OAAOkL,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACL,kBAAC,EAAD,KACI,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7K,MAAK,SAAA8K,GACjCA,EAAaC,kB","file":"static/js/main.b12cf520.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './common.style.css';\n\nconst Container = (props) => {\n    const inline = {\n        display: 'flex',\n        justifyContent: props.justifyContent,\n        alignItems: props.alignItems,\n        height: window.innerHeight,\n        width: window.innerWidth,\n        backgroundColor: props.backgroundColor,\n    }\n    return <div className={classNames('background-transition')} style={inline}>{props.children}</div>\n}\n\nexport default Container;","import axios from 'axios';\n\nexport const getZones = () => axios.get('/api/zones')\n    .then(response => response)\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const setZoneOn = ({ zone, setZones }) => {\n    axios.get(`/api/zone/on/${zone.zone}`)\n        .then(response => {\n            setZones(response.data)\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n}\n\nexport const setZoneOff = ({ zone, setZones }) => axios.get(`/api/zone/off/${zone.zone}`)\n    .then(response => setZones(response.data))\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const getCalendarEntries = () => axios.get('/api/calendar')\n    .then(response => response)\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const getCalendarEntriesCount = () => axios.get('/api/calendar/count')\n    .then(response => response)\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const getRooms = () => axios.get('/api/rooms')\n    .then(response => {\n        return response\n    })\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const getAnalytics = () => axios.get('/api/analytics')\n    .then(response => {\n        return response\n    })\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const turnRoomOn = (id, setLoading) => axios.get(`/api/room/on/${id}`)\n    .then(response => {\n        // setLoading(0);\n        return response\n    })\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const turnRoomOff = (id, setLoading) => axios.get(`/api/room/off/${id}`)\n    .then(response => {\n        // setLoading(0);\n        return response\n    })\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })","import React from 'react';\nimport io from 'socket.io-client';\nimport { isEqual } from 'lodash';\nimport { getRooms, getAnalytics } from './api/rest';\nimport { NIGHT_BACKGROUND_COLOR } from './constants';\n\nconst socket = io(process.env.REACT_APP_LUMEN_HOST);\n\nexport const Context = React.createContext();\n\nconst reducer = (state, action) => {\n    const newState = { ...state };\n    switch (action.type) {\n        case 'SET_ROOMS':\n            newState.rooms = action.payload.rooms;\n            newState.house = action.payload.house;\n            break;\n        case 'SET_ANALYTICS':\n            newState.analytics = action.payload;\n            break;\n        case 'SET_IS_DAY':\n            newState.isDay = true;\n            break;\n        case 'SET_IS_NIGHT':\n            newState.isDay = false;\n            break;\n        default:\n            throw new Error();\n    }\n    return newState;\n}\n\nconst initialState = {\n    rooms: [],\n    house: {\n        analytics: [],\n        totalPowerOn: 0,\n    }, \n    isLoading: false,\n    isDay: false,\n    colors: {\n        day: {\n            color: 'black',\n            backgroundColor: 'white'\n        },\n        night: {\n            color: 'white',\n            backgroundColor: NIGHT_BACKGROUND_COLOR\n        }\n    }\n};\n\nexport const Provider = (props) => {\n    const [state, dispatch] = React.useReducer(reducer, initialState);\n    React.useLayoutEffect(() => {\n        const hour = new Date().getHours();\n        if (hour >= 6 && hour <= 17) {\n            dispatch({ type: 'SET_IS_DAY' })\n        }\n        const rooms = getRooms();\n        rooms.then((res) => {\n            dispatch({ type: 'SET_ROOMS', payload: res.data })\n        })\n        socket.on('groups_update', (data) => {\n            dispatch({ type: 'SET_ROOMS', payload: data })\n        })\n    }, [])\n\n    return (\n        <Context.Provider value={{ ...state, dispatch }}>\n            {props.children}\n        </Context.Provider>\n    )\n}","export const GREEN = \"#37b86e\";\nexport const GREY = \"#333333\";\n\nexport const NIGHT_BACKGROUND_COLOR_CONTAINER = \"#1d1d1d\";\nexport const DAY_BACKGROUND_COLOR_CONTAINER = \"#ededed\"\n\nexport const WHITE = \"#fff\";\nexport const NIGHT_BACKGROUND_COLOR = \"#333333\";\n\nexport const DAY_COLOR = \"#000000a6\";\nexport const DAY_COLOR_SECONDARY = \"#00000078\";\n\nexport const NIGHT_COLOR = \"#ffffffba\";\n\nexport const DAY_BOX_SHADOW = `0 2px 1px -1px #ffffff80, 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)`;\nexport const NIGHT_BOX_SHADOW = `0 2px 1px -1px #00000080, 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)`;\n\n","import React from 'react';\nimport { Context } from '../Context';\nimport { DAY_COLOR_SECONDARY } from '../constants';\n\nconst Title = (props) => {\n    const { isDay } = React.useContext(Context);\n    const inline = {\n        color: props.color ? props.color : isDay ? DAY_COLOR_SECONDARY : 'white',\n        fontSize: 18,\n        fontFamily:` 'Fredoka One', cursive`,\n        ...props.style\n    }\n    return <div style={inline}>{props.children}</div>\n}\n\nexport default Title;","import React from 'react';\nimport Title from './Title';\nimport { Context } from '../Context';\nimport { DAY_BOX_SHADOW, NIGHT_BOX_SHADOW } from '../constants';\n\nconst Flex = (props) => {\n    const { isDay } = React.useContext(Context);\n\n    const inline = {\n        display: 'flex',\n        flexDirection: props.direction,\n        justifyContent: props.justifyContent,\n        alignItems: props.alignItems,\n        height: props.height,\n        width: props.width,\n        backgroundColor: props.backgroundColor,\n        padding: props.padding,\n        margin: props.margin,\n        borderRadius: props.borderRadius,\n        flexWrap: props.flexWrap,\n        boxShadow: props.boxShadow && determineBoxShadow(isDay),\n        padding: props.padding,\n        flexWrap: props.wrap && 'wrap',\n        ...props.style,\n    }\n    return (\n        <React.Fragment>\n            <Title style={{ minHeight: props.title && 30 }}>{props.title}</Title>\n            <div \n                onMouseDown={props.onMouseDown} \n                className={props.className} \n                style={inline} \n                onClick={props.onClick} \n                onMouseOver={props.onMouseOver} \n                onMouseLeave={props.onMouseLeave}>\n                {props.children}\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst determineBoxShadow = (isDay) => {\n    if (isDay) {\n        return DAY_BOX_SHADOW;\n    }\n    return NIGHT_BOX_SHADOW;\n}\n\n\n\nexport default Flex;","import React from 'react';\nimport Flex from '../../common/Flex';\nimport Title from '../../common/Title';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLightbulb, faTachometerAlt, faMicrochip, faShapes } from '@fortawesome/free-solid-svg-icons'\nimport { Context } from '../../Context';\nimport { NIGHT_BACKGROUND_COLOR, WHITE } from '../../constants';\n\nconst Branding = () => {\n    const { isDay } = React.useContext(Context);\n    return (\n        <Flex\n            borderRadius=\"3px 10px 10px\"\n            backgroundColor={isDay ? NIGHT_BACKGROUND_COLOR : WHITE}\n            height=\"120px\"\n            width=\"100%\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            direction=\"column\"\n        >\n            <FontAwesomeIcon color={isDay ? WHITE : NIGHT_BACKGROUND_COLOR}\n                size=\"2x\" icon={faLightbulb} />\n            <div style={{ marginTop: 10 }} />\n            <Title color={isDay ? WHITE : NIGHT_BACKGROUND_COLOR}>Hue Analytics</Title>\n        </Flex>\n    )\n}\n\nexport default Branding;","import React from 'react';\nimport Flex from './Flex';\nimport { Context } from '../Context';\nimport { DAY_COLOR, DAY_COLOR_SECONDARY } from '../constants';\n\nconst TitleAndDescription = (props) => {\n    const { isDay } = React.useContext(Context);\n    const inline = {\n        name: {\n            fontSize: props.fontSize,\n            marginLeft: props.noMargin ? 0 : 10,\n            color: props.titleColor ? props.titleColor : isDay ? DAY_COLOR : 'white',\n            fontFamily: '\"Fredoka One\", cursive',\n        },\n        icon: {\n            display: 'flex',\n            alignItems: 'center',\n            marginLeft: 6,\n        },\n        description: {\n            fontSize: 11,\n            marginLeft: props.noMargin ? 0 : 10,\n            color: props.secondaryColor ? props.secondaryColor : isDay ? DAY_COLOR_SECONDARY : 'white',\n            fontFamily: '\"Fredoka One\", cursive',\n        }\n    }\n    return (\n        <Flex direction=\"column\">\n            <Flex direction=\"row\">\n                <div style={inline.name}>{props.title}</div>\n                <div style={inline.icon}>{props.icon}</div>\n            </Flex>\n            <div style={inline.description}>{props.description}</div>\n        </Flex>\n    )\n}\n\nexport default TitleAndDescription;","import React from 'react';\nimport * as Lumen from \"../../Context\";\nimport TitleAndDescription from '../../common/TitleAndDescription';\nimport { POWER_PER_HOUR, getHours } from '../../utils';\n\nconst Power = () => {\n    const context = React.useContext(Lumen.Context);\n    const power = parseFloat(context.house.totalPowerOn).toFixed(3) || 0;\n    return (<TitleAndDescription fontSize={28} title={`${power}W`} description=\"Power Usage\" />)\n}\n\nexport default Power;","import React from 'react';\nimport { filter } from 'lodash';\nimport * as Lumen from \"../../Context\";\nimport TitleAndDescription from '../../common/TitleAndDescription';\nimport { POWER_PER_HOUR, getHours } from '../../utils';\n\nconst Hours = () => {\n    const context = React.useContext(Lumen.Context);\n    if (context.house.analytics.length === 0) {\n        return null\n    }\n    const month = new Date().getMonth();\n    const [hours] = filter(context.house.analytics, { id: month }) || 0;\n    return (<TitleAndDescription fontSize={28} title={`${(hours.totalTimeOn / 3600000).toFixed(2)}H`} description=\"Hours Active\" />)\n}\n\nexport default Hours;","import React from 'react';\nimport classNames from 'classnames';\nimport TitleAndDescription from '../../common/TitleAndDescription';\nimport { POWER_PER_HOUR, getHours } from '../../utils';\nimport Flex from '../../common/Flex';\nimport './status.css';\nimport { Context } from '../../Context';\nimport { turnRoomOff, turnRoomOn } from '../../api/rest';\n\nconst Status = () => {\n    const [isActivelyPressed, setIsActivelyPressed] = React.useState({id: -1, active: false});\n    const { isDay, rooms, setIsLoading } = React.useContext(Context);\n    return rooms.map((room, index) => {\n        const inline = {\n            bubble: {\n                height: 30,\n                width: 30,\n                borderRadius: 50,\n                marginBottom: 5,\n                border: \"4px solid grey\",\n                transition: 'background-color 1s ease-in-out',\n                '@keyframes': '0% {background-color: #c55d03; 50% {background-color: #eb6d00;}; 100% {background-color: #c55d03;}}',\n            },\n            onFor: {\n                fontSize: 10,\n                backgroundColor: '#cccccc',\n                padding: '0px 10px 0px 10px',\n                borderRadius: 30,\n            }\n        }\n        let onFor;\n        let onForString;\n        const lastOn = new Date(room.lastOn).toLocaleTimeString('en-US', {\n            hour: 'numeric', minute: 'numeric'\n        });\n        const handleChange = ({ on, id }) => {\n            return on ? turnRoomOff(id) : turnRoomOn(id)\n        }\n        if (room.on) {\n            const now = new Date().getTime();\n            onFor = ((now - room.lastOn) / 60000).toFixed(2);\n            onForString = `${onFor > 60 ? `${(onFor / 60).toFixed(2)} Hours` : `${onFor} Minutes`}`\n        }\n        else {\n            onForString = `Last on: ${lastOn}`;\n        }\n        return (\n            <Flex \n                onClick={() => {\n                    handleChange({ on: room.on, id: room.id });\n                    animateActive({id: room.id, setIsActivelyPressed});\n                }}\n                padding=\"10px\"\n                direction=\"column\"\n                // style={{ border: determineBorder(isDay) }}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                height=\"calc(33% - 20px)\"\n                width=\"calc(50% - 20px)\"\n                margin=\"10px 10px\"\n                borderRadius=\"10px\"\n                className={classNames(\"cursor-hover status\", { \n                    \"status-day\": isDay, \n                    \"status-night\": !isDay,\n                    \"status-day-active\": isDay && isActivelyPressed.id === room.id && isActivelyPressed.active\n                })}\n            >\n                <div className={classNames({ 'breath-animation': room.on })} style={inline.bubble}></div>\n                <TitleAndDescription noMargin fontSize={12} title={room.name} />\n                <div style={inline.onFor}>{onForString}</div>\n            </Flex>\n        )\n    }\n    )\n}\n\nconst animateActive = ({id, setIsActivelyPressed}) => {\n    setIsActivelyPressed({id, active: true});\n    setInterval(() => {\n        setIsActivelyPressed({id: -1, active: false});\n    }, 200)\n}\n\nconst determineBorder = (isDay) => {\n    if (isDay) {\n        return \"2px solid rgba(0, 0, 0, 0.12)\";\n    }\n    return \"2px solid rgba(255, 255, 255, 0.12)\";\n}\n\nexport default Status;","import React from 'react';\nimport { filter } from 'lodash';\nimport * as Lumen from \"../../Context\";\nimport { ResponsivePie } from '@nivo/pie'\nimport { getHours } from '../../utils';\nimport { isMobile } from 'react-device-detect';\n\nconst Breakdown = () => {\n    const context = React.useContext(Lumen.Context);\n    if (context.rooms.length === 0) {\n        return null\n    }\n    const [houseAnalytics] = filter(context.house.analytics, { id: new Date().getMonth() });\n    const data = context.rooms.map(room => {\n        const [roomAnalytics] = filter(room.analytics, { id: new Date().getMonth() });\n        const roomData = {\n            label: room.name,\n            id: room.name,\n            value: ((roomAnalytics.totalTimeOn / houseAnalytics.totalTimeOn) * 100).toFixed(2),\n        }\n        return roomData;\n    })\n    const theme = {\n        textColor: '#eee',\n        fontSize: '14px',\n        tickColor: '#eee',\n        fontWeight: 900\n    }\n\n    return (\n        <ResponsivePie\n            enableRadialLabels={!isMobile}\n            sliceLabel={(d) => `${parseInt(d.value).toFixed(0)}%`}\n            data={data}\n            margin={!isMobile && { top: 40, right: 80, bottom: 80, left: 80 }}\n            innerRadius={0.5}\n            padAngle={0.7}\n            cornerRadius={3}\n            colors={{ scheme: 'nivo' }}\n            borderWidth={1}\n            borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n            radialLabelsSkipAngle={10}\n            radialLabelsTextXOffset={6}\n            radialLabelsTextColor={context.isDay ? 'black' : 'white'}\n            radialLabelsLinkOffset={0}\n            radialLabelsLinkDiagonalLength={16}\n            radialLabelsLinkHorizontalLength={24}\n            radialLabelsLinkStrokeWidth={1}\n            radialLabelsLinkColor={{ from: 'color' }}\n            slicesLabelsSkipAngle={10}\n            slicesLabelsTextColor={context.isDay ? 'black' : 'white'}\n            animate={true}\n            motionStiffness={90}\n            motionDamping={15}\n            sortByValue\n            theme={theme}\n        />\n    )\n}\n\nexport default Breakdown;","import React from 'react';\nimport { filter } from 'lodash';\nimport * as Lumen from \"../../Context\";\nimport TitleAndDescription from '../../common/TitleAndDescription';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCarrot, faCaretUp, faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons';\n\nconst PreviousMonth = () => {\n    const context = React.useContext(Lumen.Context);\n    if (context.house.analytics.length === 0) {\n        return null\n    }\n    const month = new Date().getMonth();\n    const previousMonth = month === 0 ? 11 : month - 1;\n    const housePreviousMonthAnalytics = context.house.analytics[previousMonth];\n    const houseMonthAnalytics = context.house.analytics[month];\n    const change = ((housePreviousMonthAnalytics.totalTimeOn / houseMonthAnalytics.totalTimeOn).toFixed(2) * 100) - 100;\n    return (\n        <TitleAndDescription\n            fontSize={28}\n            title={`${change === -100 ? 'N/A' : `${change}%`}`}\n            titleColor={change > 0 ? '#f95858' : '#70e993'}\n            icon={<FontAwesomeIcon size=\"2x\" style={{ color: change > 0 ? '#f95858' : '#70e993' }} icon={change === -100 ? faCaretRight : change > 1 ? faCaretUp : faCaretDown} />}\n            description={change === -100 ? \"Check back next month\" : \"Change since last month\"}\n        />\n    )\n}\n\nexport default PreviousMonth;","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFireExtinguisher, faFire, faLifeRing, faLightbulb } from \"@fortawesome/free-solid-svg-icons\";\nimport { COLOR, COLOR_BRIGHT, NIGHT_BACKGROUND_COLOR, WHITE } from \"../../constants\";\nimport { Context } from '../../Context';\nimport './theme.style.css';\n\nconst ThemeToggle = () => {\n    const { dispatch, isDay } = React.useContext(Context);\n\n    return (\n        <FontAwesomeIcon\n            size=\"lg\"\n            color={isDay ? WHITE : NIGHT_BACKGROUND_COLOR}\n            icon={faLightbulb}\n            onClick={() => {\n                isDay ? dispatch({ type: \"SET_IS_NIGHT\" }) : dispatch({ type: \"SET_IS_DAY\" });\n            }}\n            style={{\n                padding: '14px',\n                backgroundColor: isDay ? NIGHT_BACKGROUND_COLOR : WHITE,\n                borderRadius: 100,\n                position: 'absolute',\n                bottom: '50px',\n                right: '50px',\n                height: '50px',\n                width: '50px',\n                boxShadow: determineBoxShadow(isDay)\n            }}\n            className=\"navigation-button show-zoom-animation\"\n        />\n    )\n}\n\nconst determineBoxShadow = (isDay) => {\n    if (isDay) {\n        return `0 2px 1px -1px #ffffff80, 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)`;\n    }\n    return `0 2px 1px -1px #00000080, 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)`;\n}\n\nexport default ThemeToggle;","import React from 'react';\nimport './App.css';\nimport Container from './common/Container';\nimport Flex from './common/Flex';\nimport Branding from './components/Branding';\nimport Rooms from './components/Rooms';\nimport Power from './components/Power';\nimport Hours from './components/Hours';\nimport Status from './components/Status';\nimport Breakdown from './components/Breakdown';\nimport { isMobile } from 'react-device-detect';\nimport PreviousMonth from './components/PreviousMonth';\nimport { Context } from './Context';\nimport { GREY, WHITE, NIGHT_BACKGROUND_COLOR, NIGHT_BACKGROUND_COLOR_CONTAINER, DAY_BACKGROUND_COLOR_CONTAINER } from './constants';\nimport ThemeToggle from './components/Theme';\n\n\nfunction App() {\n  const [height, setHeight] = React.useState(window.innerHeight);\n  const [open, setOpen] = React.useState(false);\n  const inline = {\n    zones: {\n      width: '100%',\n      flexWrap: 'wrap',\n      paddingTop: 20,\n      paddingRight: 20,\n    },\n    calendar: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      title: {\n        position: 'relative',\n        top: 20,\n        fontWeight: 500\n      }\n    },\n  }\n\n  window.addEventListener('resize', () => {\n    setHeight(window.innerHeight - 129)\n  })\n\n  const { isDay } = React.useContext(Context);\n\n  return (\n    <Container backgroundColor={isDay ? DAY_BACKGROUND_COLOR_CONTAINER : NIGHT_BACKGROUND_COLOR_CONTAINER}>\n      {!isMobile &&\n        <Flex width=\"20%\">\n          <Flex direction=\"column\" alignItems=\"flex-start\" borderRadius=\"3px 10px 10px\" width=\"100%\" margin=\"30px 30px 30px 30px\" backgroundColor={isDay ? WHITE : NIGHT_BACKGROUND_COLOR} boxShadow>\n            <Branding />\n            <Flex direction=\"column\" width=\"100%\" padding=\"0px 10px\">\n              {/* <Status /> */}\n            </Flex>\n          </Flex>\n        </Flex>\n      }\n      <Flex width={isMobile ? \"100%\" : \"80%\"} margin={isMobile ? \"30px 30px 30px 30px\" : \"30px 30px 30px 0px\"}>\n        <Flex height=\"100%\" width={isMobile ? \"100%\" : \"33%\"} margin={isMobile ? \"0px 0px 0px 0px\" : \"0px 30px 0px 0px\"} direction=\"column\">\n          <Flex borderRadius=\"3px 10px 10px\" title=\"Usage\" padding=\"20px\" height=\"100px\" width=\"100%\" backgroundColor={isDay ? WHITE : NIGHT_BACKGROUND_COLOR} boxShadow>\n            <Hours />\n          </Flex>\n          <Flex wrap borderRadius=\"3px 10px 10px\" justifyContent=\"flex-start\" title={isMobile ? \"Breakdown\" : \"Controls\"} direction=\"row\" padding=\"20px\" height=\"calc(100% - 160px)\" width=\"calc(100%)\" margin={`0px ${isMobile ? 0 : 30} 0px 0px`} backgroundColor={isDay ? WHITE : NIGHT_BACKGROUND_COLOR} boxShadow>\n            {isMobile ? <Breakdown /> : <Status />}\n          </Flex>\n        </Flex>\n        {!isMobile &&\n          <Flex height=\"100%\" width=\"66%\" direction=\"column\">\n            <Flex direction=\"row\">\n              <Flex borderRadius=\"3px 10px 10px\" padding=\"20px\" height=\"100px\" width=\"50%\" margin=\"30px 30px 0px 0px\" backgroundColor={isDay ? WHITE : NIGHT_BACKGROUND_COLOR} boxShadow>\n                <Power />\n              </Flex>\n              <Flex borderRadius=\"3px 10px 10px\" padding=\"20px\" height=\"100px\" width=\"50%\" margin=\"30px 0px 0px 0px\" backgroundColor={isDay ? WHITE : NIGHT_BACKGROUND_COLOR} boxShadow>\n                <PreviousMonth />\n              </Flex>\n            </Flex>\n            <Flex borderRadius=\"3px 10px 10px\" title=\"Month\" padding=\"20px\" height=\"calc(100% - 160px)\" width=\"100%\" margin=\"0px 0px 0px 0px\" backgroundColor={isDay ? WHITE : NIGHT_BACKGROUND_COLOR} boxShadow>\n              <Breakdown />\n            </Flex>\n          </Flex>\n        }\n      </Flex>\n      <Flex>\n        <ThemeToggle />\n      </Flex>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as Lumen from \"./Context\";\n\nReactDOM.render(\n    <Lumen.Provider>\n        <App />\n    </Lumen.Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}