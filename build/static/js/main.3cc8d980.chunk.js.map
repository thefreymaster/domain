{"version":3,"sources":["common/Container.jsx","api/rest.js","constants.js","Context.jsx","common/Title.jsx","common/Flex.jsx","components/Branding/index.jsx","common/TitleAndDescription.jsx","utils.js","components/Hours/index.jsx","components/Status/index.jsx","components/Breakdown/index.jsx","components/PreviousMonth/index.jsx","components/Theme/index.jsx","common/Font.jsx","components/Homebridge/Nest/index.jsx","components/Homebridge/Temperatures/index.jsx","components/Homebridge/GamingPC/index.jsx","components/Homebridge/index.jsx","components/LightMetrics/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Container","props","inline","display","justifyContent","alignItems","height","window","innerHeight","width","innerWidth","backgroundColor","className","classNames","style","children","turnRoomOn","id","setLoading","axios","get","then","response","catch","error","console","log","turnRoomOff","WHITE","socket","io","process","Context","React","createContext","useLumenContext","useContext","reducer","state","action","newState","type","homebridge","payload","accessories","rooms","house","analytics","isDay","Error","initialState","totalPowerOn","isLoading","colors","day","color","night","success","Provider","useReducer","dispatch","useLayoutEffect","hour","Date","getHours","res","data","on","value","Title","fontSize","fontFamily","determineBoxShadow","Flex","flexDirection","direction","padding","margin","borderRadius","flexWrap","boxShadow","wrap","textAlign","Fragment","minHeight","title","onMouseDown","animate","onClick","onMouseOver","onMouseLeave","Branding","size","icon","faHome","marginTop","TitleAndDescription","name","marginLeft","noMargin","titleColor","description","secondaryColor","convertToF","require","celcius","Hours","context","Lumen","length","month","getMonth","filter","hours","totalTimeOn","toFixed","animateActive","setIsActivelyPressed","active","setInterval","Status","useState","isActivelyPressed","setIsLoading","map","room","index","onFor","onForString","bubble","marginBottom","border","transition","lastOn","toLocaleTimeString","minute","getTime","handleChange","Breakdown","houseAnalytics","roomAnalytics","label","enableRadialLabels","isMobile","sliceLabel","d","parseInt","top","right","bottom","left","innerRadius","padAngle","cornerRadius","scheme","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","motionStiffness","motionDamping","sortByValue","theme","textColor","tickColor","fontWeight","PreviousMonth","previousMonth","housePreviousMonthAnalytics","houseMonthAnalytics","change","faCaretRight","faCaretUp","faCaretDown","ThemeToggle","faLightbulb","position","Font","Nest","nest","eco","thermostat","fan","ecoData","values","serviceCharacteristics","CurrentHeatingCoolingState","CurrentTemperature","TargetTemperature","On","Temperatures","temperatures","temperature","serviceName","replace","GamingPC","computers","faDesktop","faWindowClose","Homebridge","a","fetchAccessories","system","flexGrow","faSpinner","LightMetrics","power","parseFloat","App","setHeight","addEventListener","Theme","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cc8d980.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './common.style.css';\n\nconst Container = (props) => {\n    const inline = {\n        display: 'flex',\n        justifyContent: props.justifyContent,\n        alignItems: props.alignItems,\n        height: window.innerHeight,\n        width: window.innerWidth,\n        backgroundColor: props.backgroundColor,\n    }\n    return <div className={classNames('background-transition')} style={inline}>{props.children}</div>\n}\n\nexport default Container;","import axios from 'axios';\n\nexport const getZones = () => axios.get('/api/zones')\n    .then(response => response)\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const setZoneOn = ({ zone, setZones }) => {\n    axios.get(`/api/zone/on/${zone.zone}`)\n        .then(response => {\n            setZones(response.data)\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n}\n\nexport const setZoneOff = ({ zone, setZones }) => axios.get(`/api/zone/off/${zone.zone}`)\n    .then(response => setZones(response.data))\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const getCalendarEntries = () => axios.get('/api/calendar')\n    .then(response => response)\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const getCalendarEntriesCount = () => axios.get('/api/calendar/count')\n    .then(response => response)\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const getRooms = () => axios.get('/api/rooms')\n    .then(response => {\n        return response\n    })\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const getAnalytics = () => axios.get('/api/analytics')\n    .then(response => {\n        return response\n    })\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const turnRoomOn = (id, setLoading) => axios.get(`/api/room/on/${id}`)\n    .then(response => {\n        // setLoading(0);\n        return response\n    })\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const turnRoomOff = (id, setLoading) => axios.get(`/api/room/off/${id}`)\n    .then(response => {\n        return response\n    })\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n\nexport const getHomebridgeAccessories = () => axios.get(`/api/homebridge/accessories`)\n    .then(response => {\n        return response.data;\n    })\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })","export const GREEN = \"#37b86e\";\nexport const GREY = \"#333333\";\n\nexport const NIGHT_BACKGROUND_COLOR_CONTAINER = \"#1d1d1d\";\nexport const DAY_BACKGROUND_COLOR_CONTAINER = \"#ededed\"\n\nexport const WHITE = \"#fff\";\nexport const NIGHT_BACKGROUND_COLOR = \"#333333\";\n\nexport const DAY_COLOR = \"#000000a6\";\nexport const DAY_COLOR_SECONDARY = \"#00000078\";\n\nexport const NIGHT_COLOR = \"#ffffffba\";\n\nexport const DAY_BOX_SHADOW = `0 2px 1px -1px #ffffff80, 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)`;\nexport const NIGHT_BOX_SHADOW = `0 2px 1px -1px #00000080, 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)`;\n\nexport const RED = \"#ff7474\";\nexport const BLUE = \"#0092ff\";\n","import React from 'react';\nimport io from 'socket.io-client';\nimport { isEqual } from 'lodash';\nimport { getRooms, getAnalytics } from './api/rest';\nimport { NIGHT_BACKGROUND_COLOR } from './constants';\n\nconst socket = io(process.env.REACT_APP_LUMEN_HOST);\n\nexport const Context = React.createContext();\n\nexport const useLumenContext = () => React.useContext(Context);\n\nconst reducer = (state, action) => {\n    const newState = { ...state };\n    switch (action.type) {\n        case 'SET_HOMEBRIDGE_ACCESSORIES':\n            newState.homebridge = action.payload.accessories;\n            break;\n        case 'SET_ROOMS':\n            newState.rooms = action.payload.rooms;\n            newState.house = action.payload.house;\n            break;\n        case 'SET_ANALYTICS':\n            newState.analytics = action.payload;\n            break;\n        case 'SET_IS_DAY':\n            newState.isDay = true;\n            break;\n        case 'SET_IS_NIGHT':\n            newState.isDay = false;\n            break;\n        default:\n            throw new Error();\n    }\n    return newState;\n}\n\nconst initialState = {\n    rooms: [],\n    house: {\n        analytics: [],\n        totalPowerOn: 0,\n    },\n    isLoading: false,\n    isDay: false,\n    colors: {\n        day: {\n            color: 'black',\n            backgroundColor: 'white'\n        },\n        night: {\n            color: 'white',\n            backgroundColor: NIGHT_BACKGROUND_COLOR\n        }\n    },\n    homebridge: {\n        success: false,\n        error: false,\n    },\n};\n\nexport const Provider = (props) => {\n    const [state, dispatch] = React.useReducer(reducer, initialState);\n    React.useLayoutEffect(() => {\n        const hour = new Date().getHours();\n        if (hour >= 6 && hour <= 17) {\n            dispatch({ type: 'SET_IS_DAY' })\n        }\n        const rooms = getRooms();\n        rooms.then((res) => {\n            dispatch({ type: 'SET_ROOMS', payload: res.data })\n        })\n        socket.on('groups_update', (data) => {\n            dispatch({ type: 'SET_ROOMS', payload: data })\n        })\n        socket.on('accessories_update', (data) => {\n            dispatch({ type: 'SET_HOMEBRIDGE_ACCESSORIES', payload: { accessories: data } })\n        })\n    }, [])\n\n    return (\n        <Context.Provider value={{ ...state, dispatch }}>\n            {props.children}\n        </Context.Provider>\n    )\n}","import React from 'react';\nimport { Context } from '../Context';\nimport { DAY_COLOR_SECONDARY } from '../constants';\n\nconst Title = (props) => {\n    const { isDay } = React.useContext(Context);\n    const inline = {\n        color: props.color ? props.color : isDay ? DAY_COLOR_SECONDARY : 'white',\n        fontSize: 18,\n        fontFamily:` 'Fredoka One', cursive`,\n        ...props.style\n    }\n    return <div style={inline}>{props.children}</div>\n}\n\nexport default Title;","import React from 'react';\nimport classNames from 'classnames';\nimport Title from './Title';\nimport { Context } from '../Context';\nimport { DAY_BOX_SHADOW, NIGHT_BOX_SHADOW } from '../constants';\n\nconst Flex = (props) => {\n    const { isDay } = React.useContext(Context);\n\n    const inline = {\n        display: 'flex',\n        flexDirection: props.direction,\n        justifyContent: props.justifyContent,\n        alignItems: props.alignItems,\n        height: props.height,\n        width: props.width,\n        backgroundColor: props.backgroundColor,\n        padding: props.padding,\n        margin: props.margin,\n        borderRadius: props.borderRadius,\n        flexWrap: props.flexWrap,\n        boxShadow: props.boxShadow && determineBoxShadow(isDay),\n        padding: props.padding,\n        flexWrap: props.wrap && 'wrap',\n        textAlign: props.textAlign,\n        ...props.style,\n    }\n    return (\n        <React.Fragment>\n            <Title style={{ minHeight: props.title && 30 }}>{props.title}</Title>\n            <div\n                onMouseDown={props.onMouseDown}\n                className={classNames(props.className, { 'zoom-in-animation': props.animate })}\n                style={inline}\n                onClick={props.onClick}\n                onMouseOver={props.onMouseOver}\n                onMouseLeave={props.onMouseLeave}>\n                {props.children}\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst determineBoxShadow = (isDay) => {\n    if (isDay) {\n        return DAY_BOX_SHADOW;\n    }\n    return NIGHT_BOX_SHADOW;\n}\n\n\n\nexport default Flex;","import React from 'react';\nimport Flex from '../../common/Flex';\nimport Title from '../../common/Title';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLightbulb, faTachometerAlt, faMicrochip, faShapes, faHome } from '@fortawesome/free-solid-svg-icons'\nimport { Context } from '../../Context';\nimport { NIGHT_BACKGROUND_COLOR, WHITE } from '../../constants';\n\nconst Branding = () => {\n    const { isDay } = React.useContext(Context);\n    return (\n        <Flex\n            borderRadius=\"3px 10px 10px\"\n            backgroundColor={isDay ? NIGHT_BACKGROUND_COLOR : WHITE}\n            height=\"120px\"\n            width=\"100%\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            direction=\"column\"\n        >\n            <FontAwesomeIcon color={isDay ? WHITE : NIGHT_BACKGROUND_COLOR}\n                size=\"2x\" icon={faHome} />\n            <div style={{ marginTop: 10 }} />\n            <Title color={isDay ? WHITE : NIGHT_BACKGROUND_COLOR}>The Ranch</Title>\n        </Flex>\n    )\n}\n\nexport default Branding;","import React from 'react';\nimport Flex from './Flex';\nimport { Context } from '../Context';\nimport { DAY_COLOR, DAY_COLOR_SECONDARY } from '../constants';\n\nconst TitleAndDescription = (props) => {\n    const { isDay } = React.useContext(Context);\n    const inline = {\n        name: {\n            fontSize: props.fontSize,\n            marginLeft: props.noMargin ? 0 : 10,\n            color: props.titleColor ? props.titleColor : isDay ? DAY_COLOR : 'white',\n            fontFamily: '\"Fredoka One\", cursive',\n        },\n        icon: {\n            display: 'flex',\n            alignItems: 'center',\n            marginLeft: 6,\n        },\n        description: {\n            fontSize: 11,\n            marginLeft: props.noMargin ? 0 : 10,\n            color: props.secondaryColor ? props.secondaryColor : isDay ? DAY_COLOR_SECONDARY : 'white',\n            fontFamily: '\"Fredoka One\", cursive',\n        }\n    }\n    return (\n        <Flex direction=\"column\">\n            <Flex direction=\"row\">\n                <div style={inline.name}>{props.title}</div>\n                <div style={inline.icon}>{props.icon}</div>\n            </Flex>\n            <div style={inline.description}>{props.description}</div>\n        </Flex>\n    )\n}\n\nexport default TitleAndDescription;","const _ = require('lodash');\n\nexport const POWER_PER_HOUR = 9.3;\n\nexport const getHours = (millisec) => (millisec / (1000 * 60 * 60));\n\nexport const convertToF = (celcius) => celcius * 9/5 + 32;\n\nexport const filterTypes = (accessoriesToFilter, filterAttribute, type) => _.filter(accessoriesToFilter, (item) => {\n    return item[filterAttribute].includes(type)\n})","import React from 'react';\nimport { filter } from 'lodash';\nimport * as Lumen from \"../../Context\";\nimport TitleAndDescription from '../../common/TitleAndDescription';\nimport { POWER_PER_HOUR, getHours } from '../../utils';\n\nconst Hours = () => {\n    const context = React.useContext(Lumen.Context);\n    if (context.house.analytics.length === 0) {\n        return null\n    }\n    const month = new Date().getMonth();\n    const [hours] = filter(context.house.analytics, { id: month }) || 0;\n    return (<TitleAndDescription fontSize={28} title={`${(hours.totalTimeOn / 3600000).toFixed(2)}H`} description=\"Hours Active\" />)\n}\n\nexport default Hours;","import React from 'react';\nimport classNames from 'classnames';\nimport TitleAndDescription from '../../common/TitleAndDescription';\nimport { POWER_PER_HOUR, getHours } from '../../utils';\nimport Flex from '../../common/Flex';\nimport './status.css';\nimport { Context } from '../../Context';\nimport { turnRoomOff, turnRoomOn } from '../../api/rest';\n\nconst Status = () => {\n    const [isActivelyPressed, setIsActivelyPressed] = React.useState({id: -1, active: false});\n    const { isDay, rooms, setIsLoading } = React.useContext(Context);\n    return rooms.map((room, index) => {\n        const inline = {\n            bubble: {\n                height: 30,\n                width: 30,\n                borderRadius: 50,\n                marginBottom: 5,\n                border: \"4px solid grey\",\n                transition: 'background-color 1s ease-in-out',\n                '@keyframes': '0% {background-color: #c55d03; 50% {background-color: #eb6d00;}; 100% {background-color: #c55d03;}}',\n            },\n            onFor: {\n                fontSize: 10,\n                backgroundColor: '#cccccc',\n                padding: '0px 10px 0px 10px',\n                borderRadius: 30,\n            }\n        }\n        let onFor;\n        let onForString;\n        const lastOn = new Date(room.lastOn).toLocaleTimeString('en-US', {\n            hour: 'numeric', minute: 'numeric'\n        });\n        const handleChange = ({ on, id }) => {\n            return on ? turnRoomOff(id) : turnRoomOn(id)\n        }\n        if (room.on) {\n            const now = new Date().getTime();\n            onFor = ((now - room.lastOn) / 60000).toFixed(2);\n            onForString = `${onFor > 60 ? `${(onFor / 60).toFixed(2)} Hours` : `${onFor} Minutes`}`\n        }\n        else {\n            onForString = `Last on: ${lastOn}`;\n        }\n        return (\n            <Flex \n                onClick={() => {\n                    handleChange({ on: room.on, id: room.id });\n                    animateActive({id: room.id, setIsActivelyPressed});\n                }}\n                padding=\"10px\"\n                direction=\"column\"\n                // style={{ border: determineBorder(isDay) }}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                height=\"calc(33% - 20px)\"\n                width=\"calc(50% - 20px)\"\n                margin=\"10px 10px\"\n                borderRadius=\"10px\"\n                className={classNames(\"cursor-hover status\", { \n                    \"status-day\": isDay, \n                    \"status-night\": !isDay,\n                    \"status-day-active\": isDay && isActivelyPressed.id === room.id && isActivelyPressed.active\n                })}\n            >\n                <div className={classNames({ 'breath-animation': room.on })} style={inline.bubble}></div>\n                <TitleAndDescription noMargin fontSize={12} title={room.name} />\n                <div style={inline.onFor}>{onForString}</div>\n            </Flex>\n        )\n    }\n    )\n}\n\nconst animateActive = ({id, setIsActivelyPressed}) => {\n    setIsActivelyPressed({id, active: true});\n    setInterval(() => {\n        setIsActivelyPressed({id: -1, active: false});\n    }, 200)\n}\n\nconst determineBorder = (isDay) => {\n    if (isDay) {\n        return \"2px solid rgba(0, 0, 0, 0.12)\";\n    }\n    return \"2px solid rgba(255, 255, 255, 0.12)\";\n}\n\nexport default Status;","import React from 'react';\nimport { filter } from 'lodash';\nimport * as Lumen from \"../../Context\";\nimport { ResponsivePie } from '@nivo/pie'\nimport { getHours } from '../../utils';\nimport { isMobile } from 'react-device-detect';\n\nconst Breakdown = () => {\n    const context = React.useContext(Lumen.Context);\n    if (context.rooms.length === 0) {\n        return null\n    }\n    const [houseAnalytics] = filter(context.house.analytics, { id: new Date().getMonth() });\n    const data = context.rooms.map(room => {\n        const [roomAnalytics] = filter(room.analytics, { id: new Date().getMonth() });\n        const roomData = {\n            label: room.name,\n            id: room.name,\n            value: ((roomAnalytics.totalTimeOn / houseAnalytics.totalTimeOn) * 100).toFixed(2),\n        }\n        return roomData;\n    })\n    const theme = {\n        textColor: '#eee',\n        fontSize: '14px',\n        tickColor: '#eee',\n        fontWeight: 900\n    }\n\n    return (\n        <ResponsivePie\n            enableRadialLabels={!isMobile}\n            sliceLabel={(d) => `${parseInt(d.value).toFixed(0)}%`}\n            data={data}\n            margin={!isMobile && { top: 40, right: 80, bottom: 80, left: 80 }}\n            innerRadius={0.5}\n            padAngle={0.7}\n            cornerRadius={3}\n            colors={{ scheme: 'nivo' }}\n            borderWidth={1}\n            borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n            radialLabelsSkipAngle={10}\n            radialLabelsTextXOffset={6}\n            radialLabelsTextColor={context.isDay ? 'black' : 'white'}\n            radialLabelsLinkOffset={0}\n            radialLabelsLinkDiagonalLength={16}\n            radialLabelsLinkHorizontalLength={24}\n            radialLabelsLinkStrokeWidth={1}\n            radialLabelsLinkColor={{ from: 'color' }}\n            slicesLabelsSkipAngle={10}\n            slicesLabelsTextColor={context.isDay ? 'black' : 'white'}\n            animate={true}\n            motionStiffness={90}\n            motionDamping={15}\n            sortByValue\n            theme={theme}\n        />\n    )\n}\n\nexport default Breakdown;","import React from 'react';\nimport { filter } from 'lodash';\nimport * as Lumen from \"../../Context\";\nimport TitleAndDescription from '../../common/TitleAndDescription';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCarrot, faCaretUp, faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons';\n\nconst PreviousMonth = () => {\n    const context = React.useContext(Lumen.Context);\n    if (context.house.analytics.length === 0) {\n        return null\n    }\n    const month = new Date().getMonth();\n    const previousMonth = month === 0 ? 11 : month - 1;\n    const housePreviousMonthAnalytics = context.house.analytics[previousMonth];\n    const houseMonthAnalytics = context.house.analytics[month];\n    const change = ((housePreviousMonthAnalytics.totalTimeOn / houseMonthAnalytics.totalTimeOn).toFixed(2) * 100);\n    return (\n        <TitleAndDescription\n            fontSize={28}\n            title={`${change === -100 ? 'N/A' : `${change}%`}`}\n            titleColor={change > 0 ? '#f95858' : '#70e993'}\n            icon={<FontAwesomeIcon size=\"2x\" style={{ color: change > 0 ? '#f95858' : '#70e993' }} icon={change === -100 ? faCaretRight : change > 1 ? faCaretUp : faCaretDown} />}\n            description={change === -100 ? \"Check back next month\" : \"Change since last month\"}\n        />\n    )\n}\n\nexport default PreviousMonth;","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFireExtinguisher, faFire, faLifeRing, faLightbulb } from \"@fortawesome/free-solid-svg-icons\";\nimport { COLOR, COLOR_BRIGHT, NIGHT_BACKGROUND_COLOR, WHITE } from \"../../constants\";\nimport { Context } from '../../Context';\nimport './theme.style.css';\n\nconst ThemeToggle = () => {\n    const { dispatch, isDay } = React.useContext(Context);\n\n    return (\n        <FontAwesomeIcon\n            size=\"lg\"\n            color={isDay ? WHITE : NIGHT_BACKGROUND_COLOR}\n            icon={faLightbulb}\n            onClick={() => {\n                isDay ? dispatch({ type: \"SET_IS_NIGHT\" }) : dispatch({ type: \"SET_IS_DAY\" });\n            }}\n            style={{\n                padding: '14px',\n                backgroundColor: isDay ? NIGHT_BACKGROUND_COLOR : WHITE,\n                borderRadius: 100,\n                position: 'absolute',\n                bottom: '50px',\n                right: '50px',\n                height: '50px',\n                width: '50px',\n                boxShadow: determineBoxShadow(isDay)\n            }}\n            className=\"navigation-button show-zoom-animation\"\n        />\n    )\n}\n\nconst determineBoxShadow = (isDay) => {\n    if (isDay) {\n        return `0 2px 1px -1px #ffffff80, 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)`;\n    }\n    return `0 2px 1px -1px #00000080, 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)`;\n}\n\nexport default ThemeToggle;","import React from 'react';\nimport { Context } from '../Context';\nimport { DAY_COLOR_SECONDARY } from '../constants';\n\nconst Font = (props) => {\n    const { isDay } = React.useContext(Context);\n    const inline = {\n        color: props.color ? props.color : isDay ? DAY_COLOR_SECONDARY : 'white',\n        fontSize: props.fontSize,\n        fontFamily:` 'Fredoka One', cursive`,\n        ...props.style\n    }\n    return <div style={inline}>{props.children}</div>\n}\n\nexport default Font;","import React from 'react';\nimport classNames from 'classnames';\nimport { useLumenContext } from '../../../Context';\nimport { convertToF, filterTypes } from '../../../utils';\nimport Flex from '../../../common/Flex';\nimport Font from '../../../common/Font';\nimport { DAY_BACKGROUND_COLOR_CONTAINER, RED, BLUE, NIGHT_BACKGROUND_COLOR, NIGHT_BACKGROUND_COLOR_CONTAINER, DAY_COLOR_SECONDARY } from '../../../constants';\nimport './nest.style.css';\n\nconst getBackgroundColorDay = (value, isDay) => {\n    if (value === 0) {\n        if (isDay) {\n            return DAY_BACKGROUND_COLOR_CONTAINER;\n        }\n        return NIGHT_BACKGROUND_COLOR;\n    }\n    if (value === 1) {\n        return RED;\n    }\n    if (value === 2) {\n        return BLUE;\n    }\n}\n\nconst getHeatCoolStatus = (value) => {\n    if (value === 0) {\n        return \"Off\"\n    }\n    if (value === 1) {\n        return \"Heating\";\n    }\n    if (value === 2) {\n        return \"Cooling\";\n    }\n}\n\nconst Nest = () => {\n    const { homebridge, isDay } = useLumenContext();\n    const { nest } = homebridge;\n    const { eco, fan, thermostat } = nest;\n    const [data] = thermostat;\n    const [ecoData] = eco;\n    const { values, serviceCharacteristics } = data;\n    return (\n        <Flex direction=\"column\" justifyContent=\"center\" alignItems=\"center\" margin=\"20px 0px 0px 0px\">\n            <Flex className={classNames({\n                'breath-animation-nest-heat': values.CurrentHeatingCoolingState === 1,\n                'breath-animation-nest-cool': values.CurrentHeatingCoolingState === 2,\n            })}\n                // boxShadow\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                height=\"160px\"\n                width=\"160px\"\n                borderRadius=\"160px\"\n                // backgroundColor={isDay ? NIGHT_BACKGROUND_COLOR_CONTAINER : DAY_BACKGROUND_COLOR_CONTAINER}\n                style={{border: \"4px solid grey\"}}\n            >\n                <Font color={isDay ? null : DAY_BACKGROUND_COLOR_CONTAINER} style={{ marginLeft: 10 }} fontSize={48}>{convertToF(values.CurrentTemperature).toFixed(0)}°</Font>\n            </Flex>\n            <Flex direction=\"row\" margin=\"10px\">\n                <Flex direction=\"column\" justifyContent=\"center\" alignItems=\"center\" width=\"45px\" margin=\"5px 0px 5px 0px\">\n                    <Font fontSize=\"10px\">Target</Font>\n                    <Flex borderRadius=\"50px\" backgroundColor={isDay ? DAY_BACKGROUND_COLOR_CONTAINER : NIGHT_BACKGROUND_COLOR_CONTAINER} direction=\"column\" direction=\"column\" justifyContent=\"center\" alignItems=\"center\" width=\"45px\">\n                        <Font>{convertToF(values.TargetTemperature).toFixed(0)}°</Font>\n                    </Flex>\n                </Flex>\n                <Flex direction=\"column\" justifyContent=\"center\" alignItems=\"center\" width=\"75px\" margin=\"5px\">\n                    <Font fontSize=\"10px\">Status</Font>\n                    <Flex borderRadius=\"50px\" backgroundColor={isDay ? DAY_BACKGROUND_COLOR_CONTAINER : NIGHT_BACKGROUND_COLOR_CONTAINER} direction=\"column\" direction=\"column\" justifyContent=\"center\" alignItems=\"center\" width=\"75px\">\n                        <Font>{getHeatCoolStatus(values.CurrentHeatingCoolingState)}</Font>\n                    </Flex>\n                </Flex>\n                <Flex direction=\"column\" justifyContent=\"center\" alignItems=\"center\" width=\"45px\" margin=\"5px\">\n                    <Font fontSize=\"10px\">Eco</Font>\n                    <Flex borderRadius=\"50px\" backgroundColor={isDay ? DAY_BACKGROUND_COLOR_CONTAINER : NIGHT_BACKGROUND_COLOR_CONTAINER} direction=\"column\" direction=\"column\" justifyContent=\"center\" alignItems=\"center\" width=\"45px\">\n                        <Font>{ecoData.values.On ? \"Yes\" : \"No\"}</Font>\n                    </Flex>\n                </Flex>\n            </Flex>\n        </Flex>\n    )\n}\n\nexport default Nest;","import React from 'react';\nimport _ from 'lodash';\nimport { useLumenContext } from '../../../Context';\nimport { convertToF, filterTypes } from '../../../utils';\nimport Flex from '../../../common/Flex';\nimport Font from '../../../common/Font';\nimport { DAY_BACKGROUND_COLOR_CONTAINER, RED, BLUE, NIGHT_BACKGROUND_COLOR, NIGHT_BACKGROUND_COLOR_CONTAINER } from '../../../constants';\n\nconst Temperatures = () => {\n    const { homebridge, isDay } = useLumenContext();\n    const { temperatures } = homebridge;\n    return (\n        <Flex style={{ flexWrap: \"wrap\" }} direction=\"row\" margin=\"20px 0px 0px 0px\" width=\"100%\">\n            {temperatures.map(temperature => {\n                const serviceName = temperature.serviceName.replace(\"Temperature\", \"\")\n                return (\n                    <Flex width=\"50%\" direction=\"column\" height=\"100px\" justifyContent=\"center\" alignItems=\"center\">\n                        <Font fontSize=\"10px\">{serviceName}</Font>\n                        <Flex borderRadius=\"60px\" backgroundColor={isDay ? DAY_BACKGROUND_COLOR_CONTAINER : NIGHT_BACKGROUND_COLOR_CONTAINER} direction=\"column\" direction=\"column\" justifyContent=\"center\" alignItems=\"center\" width=\"60px\" height=\"60px\">\n                            <Font>{convertToF(temperature.values.CurrentTemperature).toFixed(0)}°</Font>\n                        </Flex>\n                    </Flex>\n                )\n            })}\n        </Flex>\n    )\n}\n\nexport default Temperatures;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useLumenContext } from '../../../Context';\nimport Flex from '../../../common/Flex';\nimport Font from '../../../common/Font';\nimport { DAY_BACKGROUND_COLOR_CONTAINER, NIGHT_BACKGROUND_COLOR_CONTAINER, WHITE, NIGHT_BACKGROUND_COLOR } from '../../../constants';\nimport { faDesktop, faWindowClose } from '../../../../node_modules/@fortawesome/free-solid-svg-icons';\n\nconst GamingPC = () => {\n    const { homebridge, isDay } = useLumenContext();\n    const { computers } = homebridge;\n    const [data] = computers;\n    return (\n        <Flex style={{ flexWrap: \"wrap\" }} direction=\"column\" justifyContent=\"center\" alignItems=\"center\" margin=\"20px 0px 40px 0px\" width=\"100%\">\n            <Font fontSize=\"10px\">{data.serviceName}</Font>\n            <Flex borderRadius=\"60px\" backgroundColor={isDay ? DAY_BACKGROUND_COLOR_CONTAINER : NIGHT_BACKGROUND_COLOR_CONTAINER} direction=\"column\" direction=\"column\" justifyContent=\"center\" alignItems=\"center\" width=\"60px\" height=\"60px\">\n                <FontAwesomeIcon color={isDay ? NIGHT_BACKGROUND_COLOR : WHITE} size=\"2x\" icon={data.values.On ? faDesktop : faWindowClose} />\n            </Flex>\n            <Font fontSize=\"10px\">{data.values.On ? \"Online\" : \"Offline\"}</Font>\n        </Flex>\n    )\n}\n\nexport default GamingPC;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { getHomebridgeAccessories } from '../../api/rest';\nimport { useLumenContext } from '../../Context';\nimport Flex from '../../common/Flex';\nimport Nest from './Nest';\nimport Temperatures from './Temperatures';\nimport GamingPC from './GamingPC';\nimport Font from '../../common/Font';\nimport { NIGHT_BACKGROUND_COLOR, WHITE } from '../../constants';\nimport { faWindowClose, faTruckLoading, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport System from './System';\n\nexport const Homebridge = () => {\n    const { dispatch, homebridge, isDay } = useLumenContext();\n    React.useLayoutEffect(() => {\n        const fetchAccessories = async () => {\n            const accessories = await getHomebridgeAccessories();\n            console.log(accessories)\n            dispatch({ type: \"SET_HOMEBRIDGE_ACCESSORIES\", payload: { accessories } })\n        }\n        fetchAccessories();\n    }, []);\n    if (homebridge.error) {\n        return (\n            <Flex animate height=\"100%\" direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n                <FontAwesomeIcon color={isDay ? NIGHT_BACKGROUND_COLOR : WHITE} size=\"2x\" icon={faWindowClose} />\n                <Font>Homebridge Offline</Font>\n            </Flex>\n        )\n    }\n    if (!homebridge.system) {\n        return (\n            <Flex height=\"100%\" direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n                <FontAwesomeIcon color={isDay ? NIGHT_BACKGROUND_COLOR : WHITE} size=\"2x\" icon={faSpinner} />\n            </Flex>\n        )\n    }\n    return (\n        <Flex animate direction=\"column\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n            <Nest />\n            <Flex style={{ flexGrow: 1 }} />\n            <Temperatures />\n            <Flex style={{ flexGrow: 1 }} />\n            <GamingPC />\n        </Flex>\n    )\n}","import React from 'react';\nimport { filter } from 'lodash';\nimport * as Lumen from \"../../Context\";\nimport TitleAndDescription from '../../common/TitleAndDescription';\nimport { POWER_PER_HOUR, getHours } from '../../utils';\n\nconst LightMetrics = () => {\n    const context = React.useContext(Lumen.Context);\n    if (context.house.analytics.length === 0) {\n        return null\n    }\n    const month = new Date().getMonth();\n    const [hours] = filter(context.house.analytics, { id: month }) || 0;\n\n    const power = parseFloat(context.house.totalPowerOn).toFixed(3) || 0;\n    return (<TitleAndDescription fontSize={28} title={`${power}W • ${(hours.totalTimeOn / 3600000).toFixed(2)}H`} description=\"Power • Hours\" />)\n}\n\nexport default LightMetrics;","import React from 'react';\nimport './App.css';\nimport Container from './common/Container';\nimport Flex from './common/Flex';\nimport Branding from './components/Branding';\nimport Rooms from './components/Rooms';\nimport Power from './components/Power';\nimport Hours from './components/Hours';\nimport Status from './components/Status';\nimport Breakdown from './components/Breakdown';\nimport { isMobile } from 'react-device-detect';\nimport PreviousMonth from './components/PreviousMonth';\nimport { Context } from './Context';\nimport { GREY, WHITE, NIGHT_BACKGROUND_COLOR, NIGHT_BACKGROUND_COLOR_CONTAINER, DAY_BACKGROUND_COLOR_CONTAINER } from './constants';\nimport ThemeToggle from './components/Theme';\nimport { Homebridge } from './components/Homebridge';\nimport LightMetrics from './components/LightMetrics';\n\n\nfunction App() {\n  const [height, setHeight] = React.useState(window.innerHeight);\n  const [open, setOpen] = React.useState(false);\n  const inline = {\n    zones: {\n      width: '100%',\n      flexWrap: 'wrap',\n      paddingTop: 20,\n      paddingRight: 20,\n    },\n    calendar: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      title: {\n        position: 'relative',\n        top: 20,\n        fontWeight: 500\n      }\n    },\n  }\n\n  window.addEventListener('resize', () => {\n    setHeight(window.innerHeight - 129)\n  })\n\n  const { isDay } = React.useContext(Context);\n\n  return (\n    <Container backgroundColor={isDay ? DAY_BACKGROUND_COLOR_CONTAINER : NIGHT_BACKGROUND_COLOR_CONTAINER}>\n      {!isMobile &&\n        <Flex width=\"20%\">\n          <Flex direction=\"column\" alignItems=\"flex-start\" borderRadius=\"3px 10px 10px\" width=\"100%\" margin=\"30px 30px 30px 30px\" backgroundColor={isDay ? WHITE : NIGHT_BACKGROUND_COLOR} boxShadow>\n            <Branding />\n            <Flex direction=\"column\" width=\"100%\" height=\"100%\" padding=\"0px 10px\">\n              <Homebridge />\n            </Flex>\n          </Flex>\n        </Flex>\n      }\n      <Flex width={isMobile ? \"100%\" : \"80%\"} margin={isMobile ? \"30px 30px 30px 30px\" : \"30px 30px 30px 0px\"}>\n        <Flex height=\"100%\" width={isMobile ? \"100%\" : \"33%\"} margin={isMobile ? \"0px 0px 0px 0px\" : \"0px 30px 0px 0px\"} direction=\"column\">\n          <Flex borderRadius=\"3px 10px 10px\" title=\"Usage\" padding=\"20px\" height=\"100px\" width=\"100%\" backgroundColor={isDay ? WHITE : NIGHT_BACKGROUND_COLOR} boxShadow>\n            <Hours />\n          </Flex>\n          <Flex wrap borderRadius=\"3px 10px 10px\" justifyContent=\"flex-start\" title={isMobile ? \"Breakdown\" : \"Controls\"} direction=\"row\" padding=\"20px\" height=\"calc(100% - 160px)\" width=\"calc(100%)\" margin={`0px ${isMobile ? 0 : 30} 0px 0px`} backgroundColor={isDay ? WHITE : NIGHT_BACKGROUND_COLOR} boxShadow>\n            {isMobile ? <Breakdown /> : <Status />}\n          </Flex>\n        </Flex>\n        {!isMobile &&\n          <Flex height=\"100%\" width=\"66%\" direction=\"column\">\n            <Flex direction=\"row\">\n              <Flex borderRadius=\"3px 10px 10px\" padding=\"20px\" height=\"100px\" width=\"50%\" margin=\"30px 30px 0px 0px\" backgroundColor={isDay ? WHITE : NIGHT_BACKGROUND_COLOR} boxShadow>\n                <LightMetrics />\n              </Flex>\n              <Flex borderRadius=\"3px 10px 10px\" padding=\"20px\" height=\"100px\" width=\"50%\" margin=\"30px 0px 0px 0px\" backgroundColor={isDay ? WHITE : NIGHT_BACKGROUND_COLOR} boxShadow>\n                <PreviousMonth />\n              </Flex>\n            </Flex>\n            <Flex borderRadius=\"3px 10px 10px\" title=\"Month\" padding=\"20px\" height=\"calc(100% - 160px)\" width=\"100%\" margin=\"0px 0px 0px 0px\" backgroundColor={isDay ? WHITE : NIGHT_BACKGROUND_COLOR} boxShadow>\n              <Breakdown />\n            </Flex>\n          </Flex>\n        }\n      </Flex>\n      <Flex>\n        <ThemeToggle />\n      </Flex>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as Lumen from \"./Context\";\n\nReactDOM.render(\n    <Lumen.Provider>\n        <App />\n    </Lumen.Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}